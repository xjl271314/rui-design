// 实现蜂巢效果的mixin 2020-03-26
@mixin honeycumb($num:4, $size:250px) {
    .honeycomb {
        display: flex;
        flex-wrap: wrap;
        list-style: none;
        justify-content: center;
        align-items: center;
        max-width: 1200px;
        margin: 0 auto;
        padding: 0;

        &-cell {
            flex: 0 1 $size;
            max-width: $size;
            height: 0.55*$size;
            margin: 0.26*$size 0.05*$size 0.1*$size;
            position: relative;
            padding: 0.5em;
            text-align: center;
            z-index: 1;

            // 背景图 
            &::before {
                content: '';
                background: #fff;
                -webkit-transform: scale(1.055);
                transform: scale(1.055);
            }

            // 用来做蒙层
            &::after {
                content: '';
                background: #3ea0eb;
                opacity: 0.5;
                transition: opacity 350ms;
            }

            .bg{
                position: absolute;
                top: -50%;
                left: 0;
                width: 100%;
                height: 200%;
                display: block;
                background: #FFF;
                clip-path: polygon(50% 0%, 100% 25%, 100% 75%, 50% 100%, 0% 75%, 0% 25%);
                z-index: -1;
                object-fit: cover;
                object-position: center;
            }
            .title {
                height: 100%;
                display: flex;
                flex-direction: column;
                justify-content: center;
                -webkit-hyphens: auto;
                -ms-hyphens: auto;
                hyphens: auto;
                word-break: break-word;
                text-transform: uppercase;
                color: #fff;
                font-weight: 700;
                font-size: 1.75em;
                transition: opacity 350ms;
            }
        }
        // 占位
        &.placeholder {
            display: none;
            opacity: 0;
            width: $size;
            margin: 0 0.05*$size;
        }
    }
}

@media (max-width: 550px) {
    .honeycomb-cell {
        margin: 81.25px 25px;
    }
}

@media (min-width: 550px) and (max-width: 825px) {
    .honeycomb-cell:nth-child(3n) {
        margin-right: calc(50% - 125px);
        margin-left: calc(50% - 125px);
    }

    .honeycomb__placeholder:nth-child(3n + 5) {
        display: block;
    }
}

@media (min-width: 825px) and (max-width: 1100px) {
    .honeycomb-cell:nth-child(5n + 4) {
        margin-left: calc(50% - 275px);
    }

    .honeycomb-cell:nth-child(5n + 5) {
        margin-right: calc(50% - 275px);
    }

    .honeycomb__placeholder:nth-child(5n),
    .honeycomb__placeholder:nth-child(5n + 3) {
        display: block;
    }
}

@media (min-width: 1100px) {
    .honeycomb-cell:nth-child(7n + 5) {
        margin-left: calc(50% - 400px);
    }

    .honeycomb-cell:nth-child(7n + 7),
    .honeycomb-cell:nth-child(7n + 5):nth-last-child(2) {
        margin-right: calc(50% - 400px);
    }

    .honeycomb__placeholder:nth-child(7n + 7),
    .honeycomb__placeholder:nth-child(7n + 9),
    .honeycomb__placeholder:nth-child(7n + 11) {
        display: block;
    }
}

// $radius Number radius半径  $direction Array 方向数组
@mixin borderRadius($radius, $direction:'') {
    @if $direction == '' {
        border-radius: $radius;
    }
    @else {
        @if $direction=='top' {
            border-top-left-radius: $radius;
            border-top-right-radius: $radius;
        }
        @if $direction=='bottom' {
            border-bottom-left-radius: $radius;
            border-bottom-right-radius: $radius;
        }
        @if $direction=='left' {
            border-top-left-radius: $radius;
            border-bottom-left-radius: $radius;
        }
        @if $direction=='right' {
            border-top-right-radius: $radius;
            border-bottom-right-radius: $radius;
        }
    }
}

//图片宽高比例自适应或者固定比例
// 宽高比16:9 （100%*9）/16
@mixin imgFixPercent($percent:100%) {
    position: relative;
    overflow: hidden;
    padding-bottom: $percent;
    >img {
        position: absolute;
        left: 0;
        top: 0;
    }
}

//当元素数量为指定数量时 选择所有的元素
// $bortherClassName的原因是因为层级嵌套的情况下会失效
@mixin nItems($n, $bortherClassName) {
    &:first-child:nth-last-child(#{$n}),
    &:first-child:nth-last-child(#{$n})~#{$bortherClassName} {
        @content;
    }
}

// css选择器 选择列表中第n个到第m个之间的元素
@mixin checkedInCros($start, $end) {
    :nth-child(-n+#{$end}):nth-child(n+#{$start}) {
        @content;
    }
}

//根据每行排列几个 将数字转化为宽度
@mixin column($num:2) {
    width: 100% / $num;
}

@mixin textEllipsis($line:2) {
    display: -webkit-box !important;
    overflow: hidden;
    text-overflow: ellipsis;
    word-wrap: break-word;
    /* autoprefixer: off */
    -webkit-box-orient: vertical;
    -webkit-line-clamp: $line;
}

//假如每行n列 最后一列元素的特殊样式
@mixin columnLastRowStyle($column:2) {
    @if $column==2 {
        &:last-child,
        &:nth-last-child(2):nth-of-type(2n+1) {
            @content;
        }
    }
    @if $column==3 {
        &:last-child,
        &:nth-last-child(2):nth-of-type(3n+2),
        &:nth-last-child(3):nth-of-type(3n+1),
            {
            @content;
        }
    }
}

/* 行高 */
@mixin lineHeight($height:50px, $line-height:50px) {
    @if ($height !=null) {
        height: $height;
    }
    @if ($line-height !=null) {
        line-height: $line-height;
    }
}

@mixin displayFlex($direction:'row',$justify:'flex-start',$align:'center'){
    @if $direction == 'row'{
        flex-direction: row;
    }
    @else{
        flex-direction: column;
    }
}